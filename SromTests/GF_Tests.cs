using Polinomial_Basis_Galua_Field;
using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SromTests
{
    [TestFixture]
    public class GF_Tests
    {
        
        [Test]
      
        [TestCase("04025B841D023853E22F5EEFE77BA71CB09348711A54", "03057BD0C40E5666431F740868EC80F2A589D90D5A84", "07072054D90C6E35A1302AE78F9727EE151A917C40D0")]
        [TestCase("0B33D40D60E3FC0882CF8FDE4F6698EC3DFF1E0A4256", "1ED8DECC0295A7FCE8F6FEF06DF9FC2E95B58E014E8C", "15EB0AC162765BF46A39712E229F64C2A84A900B0CDA")]
        [TestCase("184E58C0CFDB532530EFD52DF38D872E22800BA43666", "1B0842C5CD8C2BCA274F5DB6ECD7E2B8388807190F08", "03461A05025778EF17A0889B1F5A65961A080CBD396E")]
        [TestCase("0E066173FEB9433D2DF9808DEE269010C01CCD337C5D", "05E5662FF03A1B13BB530EFD8D2FEDDDEB807EE6FE3B", "0BE3075C0E83582E96AA8E7063097DCD2B9CB3D58266")]
        [TestCase("13CB1F92DA7DC527A6339EF268722D807497ED985DAB", "0C252A134A85667FC2F7AAC16EA2B3B2E7CAC49DD74D", "1FEE358190F8A35864C4343306D09E32935D29058AE6")]
        [TestCase("1DCBC859A20E38A26C8194493AC15299DE5611CAE264", "0B0AAC9CA65833BB9C50DC02B6D4D8A5E877C1F6EEDD", "16C164C504560B19F0D1484B8C158A3C3621D03C0CB9")]
        [TestCase("1C5E2429AC2AD9388618C43A14D4A54FFB07C5ACA3CB", "15EDA14DFDAC621654AF3830C726794E726ACA236BD6", "09B385645186BB2ED2B7FC0AD3F2DC01896D0F8FC81D")]
        public void AdditionTests(string aHex, string bHex, string expected)
        {
            // Arrange
            var hex11 = Program.Hex_to_Byte(aHex);
            var hex22 = Program.Hex_to_Byte(bHex);

            var answer = Program.Addition_to_string(hex11, hex22);
            
            Assert.AreEqual(expected,Program.Binary_String_To_Hex_String(answer));
        }



        [Test]
        
        [TestCase("1C29457A099D28E10F9DAA13FB97467BEA264C085A0F", "11340DF148A86CB702C747B32395F62295106AD94A18", "006D8D34BB776941E29B44E2584965A5EA6F50018EB8")]
        [TestCase("1C03B2AC65B1F2B8FE5443A9B382E44BA55651770E91", "164B2827C01BDA4093EAC8936BF48D68C3AE55294E59", "0485915926B0DE940EF823383E092A8B46A0BF3D8828")]
        [TestCase("087CA4EC444A55B350E680F836BB372DFC6297FFD2F4", "1897E29A9E767C379550F845F99224B1C0EF941DE54E", "0F6C39DC788D1D0802F89ED635549DCC1441A8967A60")]
        [TestCase("0A50024F497E7D7D3AF0745968CC137ADD6F70342FE4", "16C26DAD681FEA5ABD0D7D3F29C3A344A8A65CE38601", "1719147D1D3B0B3842788EC8E4404415911D96ECDABC")]
        [TestCase("182013E4E5B78B255A60337E3837FFC83B7FE6F0620A", "054545432B52246FC80F2E0C344EBEEE0B07A22D3BF5", "0F9284D563CDC9D98B8BA41B2AF5E28616C3F2E7557A")]
        [TestCase("137FC9E650E8B11AAD711D9F7B5214337915C668C6FB", "1F4E6BA8A86680217F003E2E72D56EE044894F85D069", "0EE9DC4A6EA9AD63D16484A791F739BA95DA26C541E8")]
        [TestCase("1C5E2429AC2AD9388618C43A14D4A54FFB07C5ACA3CB", "15EDA14DFDAC621654AF3830C726794E726ACA236BD6", "1EAF9597A75D2DB77B1DF15C61C1E391F10DB2C3AA58")]
        public void Mulltiplication(string aHex, string bHex, string expected)
        {
            // Arrange
            var hex11 = Program.Hex_to_Byte(aHex);
            var hex22 = Program.Hex_to_Byte(bHex);

            var answer = Program.Mulltiplication(hex11, hex22);
            
            Assert.AreEqual(expected, Program.Binary_String_To_Hex_String(Program.Byte_To_Binary_String(answer)));
        }

        [Test]

        [TestCase("166059213BAA966CC85D318BD5FC541612515C012BA7", "19A6333AC3E8D1807F4A67C8A8E876D58C289159E748")]
        [TestCase("1C982E83F8DBE84DAAE37FE97051188A617974D98CC0", "09E7238A746FAB3D1C61085C7948B02E352C8224EFE1")]
        [TestCase("1985A3AC884A4AE46DCCC39B9E7F46F77488F99C5E9B", "1F716A625D09F592591E19FB442F344806EF96DC6F53")]
        [TestCase("01930222C8B1FE6EAC72DD6B1A7689AD616DEFA0AD1F", "1C53999C95742AA4C2FFE69EC3B8B1B1AB23969690EA")]
        [TestCase("16613D618E2339EB3846602274AD2107BEBDDBCE676F", "1DE75582B36A4C3D8DF50524B9EC9F35845515F2273E")]
        [TestCase("0867721B2B22DFC217367A94E3E690ECEB1083F11E8B", "0D9195FE8CDCD7501A083E821E5540C7CEFB589E9F6B")]
        [TestCase("1478828C2002FEB61705D528F45BF673C586550EDB86", "1D6B0B1E99A15814F505DA569DD84A539B0E78D698DB")]
        public void Square(string aHex, string expected)
        {

            var hex11 = Program.Hex_to_Byte(aHex);
            var answer = Program.Square(hex11);
           
            Assert.AreEqual(expected, Program.Binary_String_To_Hex_String(Program.Byte_To_Binary_String(answer)));
        }

        [Test]

        [TestCase("166059213BAA966CC85D318BD5FC541612515C012BA7", "1")]
        [TestCase("1C982E83F8DBE84DAAE37FE97051188A617974D98CC0", "0")]
        [TestCase("1985A3AC884A4AE46DCCC39B9E7F46F77488F99C5E9B", "0")]
        [TestCase("01930222C8B1FE6EAC72DD6B1A7689AD616DEFA0AD1F", "1")]
        [TestCase("16613D618E2339EB3846602274AD2107BEBDDBCE676F", "1")]
        [TestCase("0867721B2B22DFC217367A94E3E690ECEB1083F11E8B", "0")]
        [TestCase("1478828C2002FEB61705D528F45BF673C586550EDB86", "1")]
        public void Trace(string aHex, string expected)
        {

            var hex11 = Program.Hex_to_Byte(aHex);
            

            Assert.AreEqual(expected, Program.Trace_into_String(hex11));
        }


        [Test]

        [TestCase("135C167DB388DD77E521F82595BA6C97F3942584F719", "1CE16283C7B41EB0206704FAFA6FA3EEF7F9CA93A210", "106E265920A16288523CE0AB14F6A6E244A9F26D53DA")]
        [TestCase("1748C21FC946761B9E874FE3F74A0625A2CC7CCA422C", "152A3E78A8AE4D0614E33EAA146D9B674B798F7C2E2E", "17BCB64D517431EA2E4ABF706617185769596E0BCFD5")]
        [TestCase("19D497A80669538CCE24A314FA514C4C5280FFDDFEC4", "15FC135457FC666BCD95FB39959E09A260594BDBDA86", "1613906BB642A7464AEA6669526251425641216D5C0D")]
        [TestCase("090A64307C0557665C1203D9123055D52746416ADF92", "00A73E90523CC4E1990705789B24A45F720BCF64FF49", "06CF5A277F20B6F304D543E3B9F9680C976DD64FE7D3")]
        [TestCase("0AD1F561795C32BB15352AC02592E82D12463AF03B64", "060AC5BFDD6B9F9423903F82D52A7A0ACF33A2811889", "15F701429DCB3789EBD316E4063B3194623DEF28E04B")]
        [TestCase("1870D6C9611CB61D37B36E8011D1AE2DBC9E5A3C5C3F", "07F5AA468E399A72EA987FA9502239B8D473893F1EDF", "03F71155F75EAC24AD0EFB6B7673A5C576D2CA785B31")]
        [TestCase("1B7889F84932552B0A1DB049404463238858EA8714AC", "06EEFF45134345CDB1EF411AFD944AB018BA51378379", "1E59AD7180C9A4EE5413B930C9B88409D7F9446531EC")]
        public void Power(string aHex, string bHex, string expected)
        {
            // Arrange
            var hex11 = Program.Hex_to_Byte(aHex);
            var hex22 = Program.Hex_to_Byte(bHex);

            var answer = Program.Power(hex11, hex22);

            Assert.AreEqual(expected, Program.Binary_String_To_Hex_String(Program.Byte_To_Binary_String(answer)));
        }


        [Test]

        [TestCase("12B0870C6ED04DC97F5175A45636D081315839BD7C3D", "19BAED400B4C7EF5DF62C85BE06289F21A8B5D65B72A")]
        [TestCase("19A80F2F3B380F7BCB13F0B11FD3623E8309BF4296C3", "13550A8D702294755B0E5D0D5E268918D12FAACB9F02")]
        [TestCase("0C388C3B5E0E11469B7F86F8BF0F8528C99F98A626F7", "1B2CB413E01BD8E473C1F62C28B4FCB162465E760371")]
        [TestCase("1AB1874182B2E5A30D593E4D6E0CD64AECBD13E9AC3E", "137E1392D6694A9E644F8D3A7F451F1A72D90E718A39")]
        [TestCase("15B79260A51C72ED57A86944F34662ACD2020520742C", "1AECC7859AC991E55F5B034C3B4B876CDF229E61AC1F")]
        [TestCase("1C1107E44B7A62A12008B564034F126B4CBCF7DC49B9", "1D3D361025AE2C63E85FC40DA0F18F5369CE1E062EB4")]
        [TestCase("09FF5D4E6F45D4D6F5EFD3C50B56B36C9BC4938C2CEE", "139A38CAE3321181F78F37CD41FF32D2011464498369")]
        public void Inverted(string aHex, string expected)
        {

            var hex11 = Program.Hex_to_Byte(aHex);
            var answer = Program.Inversed_Element(hex11);

            Assert.AreEqual(expected, Program.Binary_String_To_Hex_String(Program.Byte_To_Binary_String(answer)));
        }









    }

}
